@page "/admin/members"
@inject MemberService MemberService
@inject NavigationManager NavigationManager
@inject SessionService SessionService
@rendermode InteractiveServer

@using BLL.DTOs
@using BLL.Services
@using eStore.Components.Layout
@using eStore.Components.Shared

<PageTitle>Quản lý Member</PageTitle>

<AdminOnly>
    <div class="container py-4">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h4 class="mb-0">
                    <i class="bi bi-people me-2"></i>Quản lý Member
                </h4>
                <a href="/admin/members/create" class="btn btn-light btn-sm">
                    <i class="bi bi-plus-circle me-1"></i>Thêm Member mới
                </a>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        @errorMessage
                        <button type="button" class="btn-close" @onclick="(() => errorMessage = null)"></button>
                    </div>
                }

                @if (!string.IsNullOrEmpty(successMessage))
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <i class="bi bi-check-circle me-2"></i>
                        @successMessage
                        <button type="button" class="btn-close" @onclick="(() => successMessage = null)"></button>
                    </div>
                }

                @if (isLoading)
                {
                    <div class="text-center py-4">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Đang tải...</span>
                        </div>
                        <p class="mt-2">Đang tải danh sách member...</p>
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Email</th>
                                    <th>Tên công ty</th>
                                    <th>Thành phố</th>
                                    <th>Quốc gia</th>
                                    <th class="text-center">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (members.Any())
                                {
                                    @foreach (var member in members)
                                    {
                                        <tr>
                                            <td>@member.MemberId</td>
                                            <td>
                                                @member.Email
                                                @if (member.Email.Equals(AdminEmail, StringComparison.OrdinalIgnoreCase))
                                                {
                                                    <span class="badge bg-danger ms-2">Admin</span>
                                                }
                                            </td>
                                            <td>@(member.CompanyName ?? "N/A")</td>
                                            <td>@(member.City ?? "N/A")</td>
                                            <td>@(member.Country ?? "N/A")</td>
                                            <td class="text-center">
                                                <div class="btn-group" role="group">
                                                    <a href="/admin/members/details/@member.MemberId" class="btn btn-sm btn-outline-info">
                                                        <i class="bi bi-eye me-1"></i>Chi tiết
                                                    </a>
                                                    <a href="/admin/members/edit/@member.MemberId" class="btn btn-sm btn-outline-primary">
                                                        <i class="bi bi-pencil me-1"></i>Sửa
                                                    </a>
                                                    @if (!member.Email.Equals(AdminEmail, StringComparison.OrdinalIgnoreCase))
                                                    {
                                                        <button class="btn btn-sm btn-outline-danger" @onclick="() => DeleteMember(member.MemberId)">
                                                            <i class="bi bi-trash me-1"></i>Xóa
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center py-4">
                                            <i class="bi bi-inbox display-1 text-muted"></i>
                                            <p class="mt-3 text-muted">Không tìm thấy member nào.</p>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</AdminOnly>

@code {
    private List<MemberDTO> members = new();
    private string? errorMessage;
    private string? successMessage;
    private bool isLoading;
    private string AdminEmail => "admin@estore.com";

    protected override async Task OnInitializedAsync()
    {
        await LoadMembers();
    }

    private async Task LoadMembers()
    {
        isLoading = true;
        try
        {
            members = await MemberService.GetAll();
            errorMessage = null;
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi tải danh sách member: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task DeleteMember(int memberId)
    {
        if (await ConfirmDelete())
        {
            try
            {
                await MemberService.Delete(memberId);
                successMessage = "Xóa member thành công!";
                await LoadMembers();
            }
            catch (Exception ex)
            {
                errorMessage = $"Lỗi khi xóa member: {ex.Message}";
            }
        }
    }

    private async Task<bool> ConfirmDelete()
    {
        return true;
    }
}
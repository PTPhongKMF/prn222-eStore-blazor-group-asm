@page "/admin/members"
@inject MemberService MemberService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@using BLL.DTOs
@using BLL.Services
@using eStore.Components.Layout

<PageTitle>Member Management</PageTitle>

@code {
    [CascadingParameter]
    private MainLayout Layout { get; set; } = null!;

    private List<MemberDTO> members = new();
    private string? errorMessage;
    private string? successMessage;
    private bool isLoading;

    protected override async Task OnInitializedAsync()
    {
        // Check if user is logged in (you might want to add admin role check here)
        // if (Layout.UserSession == null)
        // {
        //     NavigationManager.NavigateTo("/login");
        //     return;
        // }

        await LoadMembers();
    }

    private async Task LoadMembers()
    {
        isLoading = true;
        try
        {
            members = await MemberService.GetAll();
            errorMessage = null;
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading members: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task DeleteMember(int memberId)
    {
        if (await ConfirmDelete())
        {
            try
            {
                await MemberService.Delete(memberId);
                successMessage = "Member deleted successfully!";
                await LoadMembers();
            }
            catch (Exception ex)
            {
                errorMessage = $"Error deleting member: {ex.Message}";
            }
        }
    }

    private async Task<bool> ConfirmDelete()
    {
        // Simple confirmation - in a real app, you might use a proper confirmation dialog
        return true;
    }
}

<div class="container py-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h4 class="mb-0">Member Management</h4>
            <a href="/admin/members/create" class="btn btn-light btn-sm">
                <i class="bi bi-plus-circle me-1"></i>Add New Member
            </a>
        </div>
        <div class="card-body">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    @errorMessage
                    <button type="button" class="btn-close" @onclick="(() => errorMessage = null)"></button>
                </div>
            }

            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="bi bi-check-circle me-2"></i>
                    @successMessage
                    <button type="button" class="btn-close" @onclick="(() => successMessage = null)"></button>
                </div>
            }

            @if (isLoading)
            {
                <div class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2">Loading members...</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>ID</th>
                                <th>Email</th>
                                <th>Company</th>
                                <th>City</th>
                                <th>Country</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (members.Any())
                            {
                                @foreach (var member in members)
                                {
                                    <tr>
                                        <td>@member.MemberId</td>
                                        <td>@member.Email</td>
                                        <td>@(member.CompanyName ?? "N/A")</td>
                                        <td>@(member.City ?? "N/A")</td>
                                        <td>@(member.Country ?? "N/A")</td>
                                        <td class="text-center">
                                            <div class="btn-group" role="group">
                                                <a href="/admin/members/details/@member.MemberId" class="btn btn-sm btn-outline-info">
                                                    Details
                                                </a>
                                                <a href="/admin/members/edit/@member.MemberId" class="btn btn-sm btn-outline-primary">
                                                    Edit
                                                </a>
                                                <a href="/admin/members/delete/@member.MemberId" class="btn btn-sm btn-outline-danger">
                                                    Delete
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="6" class="text-center py-4">
                                        <i class="bi bi-inbox display-1 text-muted"></i>
                                        <p class="mt-3 text-muted">No members found.</p>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>
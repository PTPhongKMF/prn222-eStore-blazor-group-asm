@page "/admin/members/edit/{MemberId:int}"
@inject MemberService MemberService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@using BLL.DTOs
@using BLL.Services
@using eStore.Components.Layout

<PageTitle>Chỉnh sửa Member</PageTitle>

@code {
    [Parameter] public int MemberId { get; set; }

    [CascadingParameter]
    private MainLayout Layout { get; set; } = null!;

    private MemberDTO member = new();
    private string? errorMessage;
    private bool isLoading = true;
    private bool isSaving;

    protected override async Task OnInitializedAsync()
    {
        // if (Layout.UserSession == null)
        // {
        //     NavigationManager.NavigateTo("/login");
        //     return;
        // }

        await LoadMember();
    }

    private async Task LoadMember()
    {
        try
        {
            var existingMember = await MemberService.GetById(MemberId);
            if (existingMember == null)
            {
                errorMessage = "Không tìm thấy member.";
                return;
            }

            member = new MemberDTO
            {
                MemberId = existingMember.MemberId,
                Email = existingMember.Email,
                CompanyName = existingMember.CompanyName,
                City = existingMember.City,
                Country = existingMember.Country,
                Password = existingMember.Password
            };
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi tải member: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleValidSubmit()
    {
        isSaving = true;
        try
        {
            await MemberService.Update(member);
            NavigationManager.NavigateTo("/admin/members");
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi cập nhật member: {ex.Message}";
        }
        finally
        {
            isSaving = false;
        }
    }

    private void HandleInvalidSubmit()
    {
        errorMessage = "Vui lòng sửa các lỗi xác thực bên dưới.";
    }
}

<div class="container py-4">
    <div class="card shadow-sm">
        <div class="card-header bg-warning text-dark d-flex justify-content-between align-items-center">
            <h4 class="mb-0">Chỉnh sửa Member</h4>
            <div>
                <a href="/admin/members/details/@MemberId" class="btn btn-outline-secondary btn-sm me-2">
                    <i class="bi bi-eye me-1"></i>Xem chi tiết
                </a>
                <a href="/admin/members" class="btn btn-outline-secondary btn-sm">
                    <i class="bi bi-arrow-left me-1"></i>Về danh sách
                </a>
            </div>
        </div>
        <div class="card-body">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    @errorMessage
                </div>
            }

            @if (isLoading)
            {
                <div class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Đang tải...</span>
                    </div>
                    <p class="mt-2">Đang tải member...</p>
                </div>
            }
            else
            {
                <EditForm Model="@member" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                    <DataAnnotationsValidator />

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Email <span class="text-danger">*</span></label>
                                <InputText class="form-control" @bind-Value="member.Email" placeholder="Nhập địa chỉ email" />
                                <ValidationMessage For="@(() => member.Email)" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Mật khẩu <span class="text-danger">*</span></label>
                                <InputText type="password" class="form-control" @bind-Value="member.Password" placeholder="Nhập mật khẩu" />
                                <ValidationMessage For="@(() => member.Password)" />
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Tên công ty</label>
                                <InputText class="form-control" @bind-Value="member.CompanyName" placeholder="Nhập tên công ty" />
                                <ValidationMessage For="@(() => member.CompanyName)" />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="mb-3">
                                <label class="form-label">Thành phố</label>
                                <InputText class="form-control" @bind-Value="member.City" placeholder="Nhập thành phố" />
                                <ValidationMessage For="@(() => member.City)" />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="mb-3">
                                <label class="form-label">Quốc gia</label>
                                <InputText class="form-control" @bind-Value="member.Country" placeholder="Nhập quốc gia" />
                                <ValidationMessage For="@(() => member.Country)" />
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end gap-2">
                        <a href="/admin/members" class="btn btn-secondary">Hủy</a>
                        <button type="submit" class="btn btn-warning" disabled="@isSaving">
                            @if (isSaving)
                            {
                                <span class="spinner-border spinner-border-sm me-1" role="status"></span>
                            }
                            <i class="bi bi-save me-1"></i>Cập nhật Member
                        </button>
                    </div>
                </EditForm>
            }
        </div>
    </div>
</div>
@page "/admin/categories/create"
@using eStore.Components.Layout
@using eStore.Components.Shared
@inject ICategoryService CategoryService
@inject IFileStorageService FileStorageService
@inject NavigationManager NavigationManager
@inject SessionService SessionService
@rendermode InteractiveServer

@using BLL.DTOs
@using BLL.Interface
@using eStore.Components.Services

<PageTitle>Thêm danh mục mới</PageTitle>

<AdminOnly>
    <div class="container py-4">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">
                    <i class="bi bi-plus-circle me-2"></i>Thêm danh mục mới
                </h4>
            </div>
            <div class="card-body">
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        @errorMessage
                    </div>
                }

                @if (!string.IsNullOrEmpty(successMessage))
                {
                    <div class="alert alert-success" role="alert">
                        <i class="bi bi-check-circle me-2"></i>
                        @successMessage
                    </div>
                }

                <EditForm Model="@category" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" FormName="CategoryCreate">
                    <DataAnnotationsValidator />

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label" for="categoryName">Tên danh mục <span class="text-danger">*</span></label>
                                <InputText id="categoryName" class="form-control" @bind-Value="category.CategoryName" placeholder="Nhập tên danh mục" />
                                <ValidationMessage For="@(() => category.CategoryName)" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label" for="imageUrl">URL hình ảnh</label>
                                <InputText id="imageUrl" class="form-control" @bind-Value="category.ImageUrl" placeholder="https://example.com/image.jpg" />
                                <ValidationMessage For="@(() => category.ImageUrl)" />
                                <div class="form-text">
                                    <i class="bi bi-info-circle me-1"></i>
                                    Nhập URL hình ảnh cho danh mục (tùy chọn)
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label" for="description">Mô tả</label>
                        <InputTextArea id="description" class="form-control" rows="4" @bind-Value="category.Description" 
                                       placeholder="Nhập mô tả cho danh mục (tùy chọn)" />
                        <ValidationMessage For="@(() => category.Description)" />
                        <div class="form-text">
                            Mô tả chi tiết về danh mục sản phẩm (tối đa 500 ký tự)
                        </div>
                    </div>

                    <!-- Image Preview -->
                    @if (!string.IsNullOrEmpty(category.ImageUrl))
                    {
                        <div class="mb-3">
                            <label class="form-label">Xem trước hình ảnh</label>
                            <div class="text-center">
                                <img src="@category.ImageUrl" alt="Xem trước" 
                                     class="img-thumbnail" 
                                     style="max-height: 200px; max-width: 100%;"
                                     @onerror="OnImageError" />
                            </div>
                        </div>
                    }

                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-success" disabled="@isSubmitting">
                            @if (isSubmitting)
                            {
                                <span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span>
                                <text>Đang tạo...</text>
                            }
                            else
                            {
                                <i class="bi bi-plus-circle me-1"></i>
                                <text>Thêm danh mục</text>
                            }
                        </button>
                        <button type="button" class="btn btn-secondary" @onclick="OnCancel" disabled="@isSubmitting">
                            Hủy
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</AdminOnly>

@code {
    private CategoryDTO category = new();
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    private bool isSubmitting = false;
    private bool imageError = false;

    private async Task HandleValidSubmit()
    {
        isSubmitting = true;
        errorMessage = string.Empty;
        successMessage = string.Empty;

        try
        {
            var result = await CategoryService.CreateCategoryAsync(category);
            
            if (result.Success)
            {
                successMessage = result.Message;
                // Clear form
                category = new CategoryDTO();
                
                // Optional: Navigate to category list after a delay
                await Task.Delay(2000);
                NavigationManager.NavigateTo("/admin/categories");
            }
            else
            {
                errorMessage = result.Message;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi không mong muốn: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }

    private void HandleInvalidSubmit()
    {
        errorMessage = "Vui lòng kiểm tra lại thông tin đã nhập!";
        successMessage = string.Empty;
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/admin/categories");
    }

    private void OnImageError()
    {
        imageError = true;
        StateHasChanged();
    }
}
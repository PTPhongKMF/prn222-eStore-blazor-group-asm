@page "/admin/categories/edit/{CategoryId:int}"
@using eStore.Components.Layout
@using eStore.Components.Shared
@inject ICategoryService CategoryService
@inject IFileStorageService FileStorageService
@inject NavigationManager NavigationManager
@inject SessionService SessionService
@rendermode InteractiveServer

@using BLL.DTOs
@using BLL.Interface
@using eStore.Components.Services

<PageTitle>Chỉnh sửa danh mục</PageTitle>

<AdminOnly>
    <div class="container py-4">
        @if (isLoading)
        {
            <div class="text-center p-5">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2">Đang tải dữ liệu...</p>
            </div>
        }
        else if (category == null)
        {
            <div class="alert alert-danger">
                <h4 class="alert-heading">Không tìm thấy danh mục!</h4>
                <p>Danh mục với ID @CategoryId không tồn tại hoặc đã bị xóa.</p>
                <hr>
                <a href="/admin/categories" class="btn btn-primary">
                    <i class="bi bi-arrow-left me-2"></i>Quay lại danh sách
                </a>
            </div>
        }
        else
        {
            <div class="card shadow-sm">
                <div class="card-header bg-warning text-dark">
                    <h4 class="mb-0">
                        <i class="bi bi-pencil-square me-2"></i>Chỉnh sửa danh mục: @category.CategoryName
                    </h4>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            <i class="bi bi-exclamation-triangle me-2"></i>
                            @errorMessage
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success" role="alert">
                            <i class="bi bi-check-circle me-2"></i>
                            @successMessage
                        </div>
                    }

                    <EditForm Model="@category" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" FormName="CategoryEdit">
                        <DataAnnotationsValidator />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" for="categoryName">Tên danh mục <span class="text-danger">*</span></label>
                                    <InputText id="categoryName" class="form-control" @bind-Value="category.CategoryName" placeholder="Nhập tên danh mục" />
                                    <ValidationMessage For="@(() => category.CategoryName)" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label" for="imageUrl">URL hình ảnh</label>
                                    <InputText id="imageUrl" class="form-control" @bind-Value="category.ImageUrl" placeholder="https://example.com/image.jpg" />
                                    <ValidationMessage For="@(() => category.ImageUrl)" />
                                    <div class="form-text">
                                        <i class="bi bi-info-circle me-1"></i>
                                        Nhập URL hình ảnh cho danh mục (tùy chọn)
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label" for="description">Mô tả</label>
                            <InputTextArea id="description" class="form-control" rows="4" @bind-Value="category.Description" 
                                           placeholder="Nhập mô tả cho danh mục (tùy chọn)" />
                            <ValidationMessage For="@(() => category.Description)" />
                            <div class="form-text">
                                Mô tả chi tiết về danh mục sản phẩm (tối đa 500 ký tự)
                            </div>
                        </div>

                        <!-- Image Preview -->
                        @if (!string.IsNullOrEmpty(category.ImageUrl))
                        {
                            <div class="mb-3">
                                <label class="form-label">Xem trước hình ảnh</label>
                                <div class="text-center">
                                    <img src="@category.ImageUrl" alt="Xem trước" 
                                         class="img-thumbnail" 
                                         style="max-height: 200px; max-width: 100%;"
                                         @onerror="OnImageError" />
                                </div>
                            </div>
                        }

                        <!-- Category Info -->
                        <div class="mb-3">
                            <div class="alert alert-info">
                                <h6 class="alert-heading">Thông tin danh mục</h6>
                                <ul class="mb-0">
                                    <li><strong>ID:</strong> @category.CategoryId</li>
                                </ul>
                            </div>
                        </div>

                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-warning" disabled="@isSubmitting">
                                @if (isSubmitting)
                                {
                                    <span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span>
                                    <text>Đang cập nhật...</text>
                                }
                                else
                                {
                                    <i class="bi bi-check-circle me-1"></i>
                                    <text>Cập nhật danh mục</text>
                                }
                            </button>
                            <button type="button" class="btn btn-secondary" @onclick="OnCancel" disabled="@isSubmitting">
                                Hủy
                            </button>
                            <a href="/admin/categories" class="btn btn-outline-primary">
                                <i class="bi bi-arrow-left me-1"></i>Quay lại danh sách
                            </a>
                        </div>
                    </EditForm>
                </div>
            </div>
        }
    </div>
</AdminOnly>

@code {
    [Parameter] public int CategoryId { get; set; }

    private CategoryDTO? category;
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    private bool isSubmitting = false;
    private bool isLoading = true;
    private bool imageError = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadCategory();
    }

    private async Task LoadCategory()
    {
        try
        {
            isLoading = true;
            errorMessage = string.Empty;

            category = await CategoryService.GetCategoryByIdAsync(CategoryId);
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi tải danh mục: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleValidSubmit()
    {
        if (category == null) return;

        isSubmitting = true;
        errorMessage = string.Empty;
        successMessage = string.Empty;

        try
        {
            var result = await CategoryService.UpdateCategoryAsync(category);
            
            if (result.Success)
            {
                successMessage = result.Message;
                
                // Optional: Navigate back after a delay
                await Task.Delay(2000);
                NavigationManager.NavigateTo("/admin/categories");
            }
            else
            {
                errorMessage = result.Message;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi không mong muốn: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }

    private void HandleInvalidSubmit()
    {
        errorMessage = "Vui lòng kiểm tra lại thông tin đã nhập!";
        successMessage = string.Empty;
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/admin/categories");
    }

    private void OnImageError()
    {
        imageError = true;
        StateHasChanged();
    }
}
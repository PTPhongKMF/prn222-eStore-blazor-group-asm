@page "/order-history"
@inject IOrderService OrderService
@inject SessionService SessionService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@using BLL.Interface
@using BLL.DTOs
@using eStore.Components.Services

<PageTitle>Lịch sử đơn hàng</PageTitle>

<div class="container py-4">
    <div class="card shadow-sm">
        <div class="card-header bg-info text-white">
            <h4 class="mb-0">
                <i class="bi bi-clock-history me-2"></i>Lịch sử đơn hàng
            </h4>
        </div>
        <div class="card-body">
            @if (isLoading)
            {
                <div class="text-center py-5">
                    <div class="spinner-border text-info" role="status">
                        <span class="visually-hidden">Đang tải...</span>
                    </div>
                    <p class="mt-2">Đang tải đơn hàng...</p>
                </div>
            }
            else if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    @errorMessage
                </div>
            }
            else if (orders == null || !orders.Any())
            {
                <div class="text-center py-5">
                    <i class="bi bi-bag-x display-1 text-muted"></i>
                    <h5 class="mt-3">Chưa có đơn hàng nào</h5>
                    <p class="text-muted">Bạn chưa thực hiện đơn hàng nào. Hãy khám phá các sản phẩm của chúng tôi!</p>
                    <a href="/products" class="btn btn-primary">
                        <i class="bi bi-shop me-1"></i>Mua sắm ngay
                    </a>
                </div>
            }
            else
            {
                <div class="mb-3">
                    <small class="text-muted">Tổng cộng: <strong>@orders.Count</strong> đơn hàng</small>
                </div>

                <div class="row">
                    @foreach (var order in orders.OrderByDescending(o => o.OrderDate))
                    {
                        <div class="col-md-6 col-lg-4 mb-3">
                            <div class="card border-start border-info border-3 h-100">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <h6 class="card-title mb-0">
                                            <i class="bi bi-receipt me-1"></i>Đơn hàng #@order.OrderId
                                        </h6>
                                        <span class="badge @GetStatusBadgeClass(order.OrderStatusId)">
                                            @GetOrderStatusText(order.OrderStatusId)
                                        </span>
                                    </div>
                                    
                                    <div class="mb-2">
                                        <small class="text-muted">
                                            <i class="bi bi-calendar3 me-1"></i>
                                            @order.OrderDate.ToString("dd/MM/yyyy HH:mm")
                                        </small>
                                    </div>

                                    @if (order.Freight > 0)
                                    {
                                        <div class="mb-3">
                                            <small class="text-success">
                                                <i class="bi bi-truck me-1"></i>
                                                Phí ship: @order.Freight.ToString("N0") ₫
                                            </small>
                                        </div>
                                    }

                                    <div class="d-grid">
                                        <a href="/order-detail/@order.OrderId" class="btn btn-outline-info btn-sm">
                                            <i class="bi bi-eye me-1"></i>Xem chi tiết
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<OrderDTO>? orders;
    private bool isLoading = true;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var session = SessionService.GetUserSession();
            if (session == null)
            {
                NavigationManager.NavigateTo("/login");
                return;
            }

            orders = await OrderService.GetOrdersByMemberIdAsync(session.MemberId);
        }
        catch (Exception ex)
        {
            errorMessage = $"Lỗi khi tải danh sách đơn hàng: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private string GetOrderStatusText(int statusId)
    {
        return statusId switch
        {
            1 => "Chờ xác nhận",
            2 => "Đang giao hàng",
            3 => "Đã giao hàng",
            _ => "Không xác định"
        };
    }

    private string GetStatusBadgeClass(int statusId)
    {
        return statusId switch
        {
            1 => "bg-warning",
            2 => "bg-info", 
            3 => "bg-success",
            _ => "bg-secondary"
        };
    }
}
